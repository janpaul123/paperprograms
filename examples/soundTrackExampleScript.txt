// Program 15

importScripts('paper.js');

(async () => {
  // Get a canvas object for this paper.
  const canvas = await paper.get('canvas');

  // Legacy code for drawing on the canvas, not used in this example.
  const ctx = canvas.getContext('2d');
  ctx.font = '20px sans-serif';
  ctx.textAlign = 'center';
  ctx.fillStyle = 'rgb(255,0,0)';
  ctx.fillText('Program 15', canvas.width / 2, canvas.height / 2 - 10);

  // Get a "supporter canvas", which is a canvas for the entire
  // projection surface.
  const supporterCanvas = await paper.get('supporterCanvas');
  const supporterCtx = supporterCanvas.getContext('2d');

  // Get the paper number of this piece of paper (which should not change).
  const myPaperNumber = await paper.get('number');

  const test = await paper.set( 'audio', {
    soundFileIndex: 15,
    x: 25,
    y: 25,
    displayName: '15',
    webAudioNodeType: null // null means this plays a sound
  } );

  let parentPaperNumber = null;
  try {
    const upWhisker = await paper.get( 'whisker', { paperNumber: myPaperNumber } );
    upWhisker.on('paperAdded', async ({paperNumber, otherPaper}) => {
      parentPaperNumber = paperNumber;

      try {
        const message = await paper.set( 'audioGraphAdd', {
          childProgramNumber: myPaperNumber,
          parentProgramNumber: parentPaperNumber
        } );
      }
      catch( error ){
        console.log( error.message );
      }
    })

    upWhisker.on( 'paperRemoved', async ({paperNumber, otherPaper}) => {
      parentPaperNumber = paperNumber;
      try {
        const message = await paper.set( 'audioGraphRemove', {
          childProgramNumber: myPaperNumber,
          parentProgramNumber: parentPaperNumber
        } );
      }
      catch( error ){
        console.log( error.message );
      }
    });
  }
  catch( error ) {
    console.log( error.message );
  }
})();
