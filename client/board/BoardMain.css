/*Dimensions of the scenery display*/
@value displayWidth: 640px;

@value displayHeight: 480px;

:local(.titleContainer) {
  text-align: center;
}

/* The flex parent for all contents of the board page, putting items in a row */
:local(.rowContainer) {
  display: flex;
  flex-direction: row;

  /*so that contents are centered within extra spacing added by flex*/
  align-content: center;
  column-gap: 20px
}

/*An (empty) item in the row so that the scenery display is centered*/
:local(.rowSpacer) {
  flex-grow: 1;
  flex-basis: 100%;
}

/*Container for controls, taking up remaining space to the right of the scenery display*/
:local(.controls) {
  flex-grow: 1;
  flex-basis: 100%;
}

/*Column containing the scenery Display and the console*/
:local(.displayWithLog) {

  /*so that this column is centered horizontally under rowContainer*/
  flex-grow: 1;

  /*This component is a column with child contents*/
  display: flex;
  flex-direction: column;
  row-gap: 20px;
}

:local(.boardPanel) {
  border-color: #330033;
  border-style: solid;
  border-width: 4px;
  padding: 4px;
  background-color: rgb(254, 252, 231);
  color: black;
}

/* specific to the console panel, this overrides boardPanel because it is defined AFTER .boardPanel */
:local(.consolePanel) {
  padding: 0;
}

/* Styling for the sim display */
:local(.simDisplayPanel) {
  width: displayWidth;
  height: displayHeight;
}

:local(.consoleContainer) {
  width: displayWidth;

  /* so there is a scrollbar - I wish this used flex for height but I couldn't figure it out*/
  min-height: 250px;
  max-height: 250px;
  overflow-y: auto;

  /*so that the last item in the list will anchor scrolling when it is visible, see https://css-tricks.com/books/greatest-css-tricks/pin-scrolling-to-bottom/*/
  overflow-anchor: none;
}

/* Parent for all paper-land specific controls */
:local(.paperLandControlsPanel) {
  box-sizing: border-box;
  gap: 10px;

  /*so the panel doesnt go to the edge of the screen (its layout container will because of flex-grow)*/
  width: 75%
}

:local(.paperLandControlsContent) {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

/* Inline display for value readouts */
:local(.inlineValue) {
  display: inline;
  padding-left: 14px;
}